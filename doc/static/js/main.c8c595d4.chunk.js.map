{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","text","setText","paramSelected","setParamSelected","listParams","param","value","className","html","onChange","e","replace2","target","replace","tagName","inputMode","map","item","index","onClick","formatParam","disabled","dangerouslySetInnerHTML","__html","textFormatted","forEach","indexOf","updatedText","replaceParamInText","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAsJeA,MAnJf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAE6BF,mBAAS,MAFtC,mBAENG,EAFM,KAESC,EAFT,KAWPC,EAAa,CACjB,CACEC,MAAO,aACPC,MAAO,QAET,CACED,MAAO,YACPC,MAAO,OAET,CACED,MAAO,QACPC,MAAO,yBAET,CACED,MAAO,QACPC,MAAO,aAET,CACED,MAAO,UACPC,MAAO,eAET,CACED,MAAO,OACPC,MAAO,YAET,CACED,MAAO,QACPC,MAAO,MAET,CACED,MAAO,MACPC,MAAO,SAET,CACED,MAAO,UACPC,MAAO,OAET,CACED,MAAO,WACPC,MAAO,SAET,CACED,MAAO,aACPC,MAAO,cAET,CACED,MAAO,cACPC,MAAO,UAET,CACED,MAAO,eACPC,MAAO,WAET,CACED,MAAO,oBACPC,MAAO,qBAET,CACED,MAAO,iBACPC,MAAO,cAET,CACED,MAAO,eACPC,MACE,sEAyBN,OACE,sBAAKC,UAAU,MAAf,UACE,sDAEA,sBAAKA,UAAU,qBAAf,UACE,cAAC,IAAD,CACEA,UAAU,WACVC,KAAMR,EACNS,SAxGa,SAACC,GACpB,IACMC,EADUD,EAAEE,OAAON,MAAMO,QAAQ,MAAO,QACrBA,QAAQ,oBAAqB,eAEtDZ,EAAQU,IAqGFG,QAAQ,IACRC,UAAU,YAGZ,sBAAKR,UAAU,cAAf,UACE,8CACA,6BACGH,EAAWY,KAAI,SAACC,EAAMC,GACrB,OACE,oBAEEX,UAAWL,IAAkBgB,EAAQ,SAAW,GAChDC,QAAS,kBAAMhB,EAAiBe,IAHlC,SAKGD,EAAKZ,OAJDa,QASb,wBACEC,QAlDmB,WAC3B,IAAMC,EAAW,sCAAkChB,EAAWF,GAAeG,MAA5D,eAEjBJ,EAAQD,EAAOoB,GACfjB,EAAiB,OA+CTkB,SAA4B,OAAlBnB,EAFZ,6BASJ,2CAEA,qBACEK,UAAU,aACVe,wBAAyB,CAAEC,OAvDN,SAACvB,GAC1B,IAAIwB,EAAgBxB,EAUpB,OARAI,EAAWqB,SAAQ,SAACR,GAClB,IAAMG,EAAW,WAAOH,EAAKZ,MAAZ,KAEjB,IAAmC,IAA/BL,EAAK0B,QAAQN,GAAqB,CACpC,IAAMO,EAAcH,EAAcX,QAAQO,EAAaH,EAAKX,OAC5DkB,EAAgBG,MAGbH,EA4CgCI,CAAmB5B,UCpI/C6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c8c595d4.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport ContentEditable from \"react-contenteditable\";\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n  const [paramSelected, setParamSelected] = useState(null);\n\n  const handleChange = (e) => {\n    const replace = e.target.value.replace(\"div\", \"span\");\n    const replace2 = replace.replace(\"<span><br></span>\", \"<p></p><br>\");\n\n    setText(replace2);\n  };\n\n  const listParams = [\n    {\n      param: \"FIRST_NAME\",\n      value: \"John\",\n    },\n    {\n      param: \"LAST_NAME\",\n      value: \"Doe\",\n    },\n    {\n      param: \"EMAIL\",\n      value: \"jonh_doe159@gmail.com\",\n    },\n    {\n      param: \"PHONE\",\n      value: \"123456789\",\n    },\n    {\n      param: \"ADDRESS\",\n      value: \"123 Main St\",\n    },\n    {\n      param: \"CITY\",\n      value: \"New York\",\n    },\n    {\n      param: \"STATE\",\n      value: \"NY\",\n    },\n    {\n      param: \"ZIP\",\n      value: \"10001\",\n    },\n    {\n      param: \"COUNTRY\",\n      value: \"USA\",\n    },\n    {\n      param: \"ORDER_ID\",\n      value: \"#0025\",\n    },\n    {\n      param: \"ORDER_DATE\",\n      value: \"2020-01-01\",\n    },\n    {\n      param: \"ORDER_TOTAL\",\n      value: \"100.00\",\n    },\n    {\n      param: \"ORDER_STATUS\",\n      value: \"Pending\",\n    },\n    {\n      param: \"ORDER_DESCRIPTION\",\n      value: \"Order Description\",\n    },\n    {\n      param: \"ORDER_DELIVERY\",\n      value: \"2020-01-01\",\n    },\n    {\n      param: \"SITE_ADDRESS\",\n      value:\n        \"<a href='https://google.com' target='_blank'>www.wopen.com.br</a>\",\n    },\n  ];\n\n  const handleAddParamInText = () => {\n    const formatParam = `<b contenteditable=\"false\">:${listParams[paramSelected].param}:</b>&nbsp;`;\n\n    setText(text + formatParam);\n    setParamSelected(null);\n  };\n\n  const replaceParamInText = (text) => {\n    let textFormatted = text;\n\n    listParams.forEach((item) => {\n      const formatParam = `:${item.param}:`;\n\n      if (text.indexOf(formatParam) !== -1) {\n        const updatedText = textFormatted.replace(formatParam, item.value);\n        textFormatted = updatedText;\n      }\n    });\n    return textFormatted;\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Texto com parametros</h1>\n\n      <div className=\"textarea-container\">\n        <ContentEditable\n          className=\"textarea\"\n          html={text}\n          onChange={handleChange}\n          tagName=\"p\"\n          inputMode=\"numeric\"\n        />\n\n        <div className=\"params-list\">\n          <span>Parametros</span>\n          <ul>\n            {listParams.map((item, index) => {\n              return (\n                <li\n                  key={index}\n                  className={paramSelected === index ? \"active\" : \"\"}\n                  onClick={() => setParamSelected(index)}\n                >\n                  {item.param}\n                </li>\n              );\n            })}\n          </ul>\n          <button\n            onClick={handleAddParamInText}\n            disabled={paramSelected === null}\n          >\n            adicionar\n          </button>\n        </div>\n      </div>\n\n      <h4>Resultado</h4>\n\n      <div\n        className=\"resultText\"\n        dangerouslySetInnerHTML={{ __html: replaceParamInText(text) }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}